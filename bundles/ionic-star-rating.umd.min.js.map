{"version":3,"sources":["ng://ionic5-star-rating/lib/ionic5-star-rating.component.ts","ng://ionic5-star-rating/lib/ionic5-star-rating.module.ts"],"names":["StarRating","this","ratingChanged","EventEmitter","readonly","activeColor","defaultColor","activeIcon","defaultIcon","halfIcon","halfStar","maxRating","fontSize","iconsArray","Math","parseFloat","prototype","ngOnInit","rating","i","push","writeValue","obj","registerOnChange","fn","onChange","registerOnTouched","onTouched","setDisabledState","isDisabled","Object","defineProperty","_rating","val","changeRating","event","id","target","parseInt","parentElement","emit","Component","args","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","multi","Input","Output","StarRatingModule","NgModule","declarations","imports","IonicModule","CommonModule","exports"],"mappings":"2cAoBAA,EAAA,WA4EE,SAAAA,IAxBAC,KAAAC,cAAuC,IAAIC,EAAAA,aAG3CF,KAAAG,SAAmB,QAEnBH,KAAAI,YAAuB,UAEvBJ,KAAAK,aAAwB,UAExBL,KAAAM,WAAsB,OAEtBN,KAAAO,YAAuB,eAEvBP,KAAAQ,SAAoB,YAEpBR,KAAAS,SAAoB,QAEpBT,KAAAU,UAAqB,EAErBV,KAAAW,SAAoB,OAGpBX,KAAAY,WAAwB,GAGtBZ,KAAKa,KAAOA,KACZb,KAAKc,WAAaA,WAiBtB,OAjFEf,EAAAgB,UAAAC,SAAA,WACEhB,KAAKiB,OAASjB,KAAKiB,QAAU,EAC7B,IAAI,IAAIC,EAAE,EAAGA,EAAIlB,KAAKU,UAAWQ,IAC/BlB,KAAKY,WAAWO,KAAKD,IASzBnB,EAAAgB,UAAAK,WAAA,SAAWC,GACTrB,KAAKiB,OAASI,GAEhBtB,EAAAgB,UAAAO,iBAAA,SAAiBC,GACfvB,KAAKwB,SAAWD,GAElBxB,EAAAgB,UAAAU,kBAAA,SAAkBF,GAChBvB,KAAK0B,UAAYH,GAEnBxB,EAAAgB,UAAAY,iBAAA,SAAkBC,GAChB5B,KAAKG,SAAWyB,EAAa,OAAS,SAGxCC,OAAAC,eAAoB/B,EAAAgB,UAAA,SAAM,KAQ1B,WACE,OAAOf,KAAK+B,aATd,SAA2BC,GACzBhC,KAAK+B,QAAUC,EAEZhC,KAAKwB,UACNxB,KAAKwB,SAASQ,oCAsClBjC,EAAAgB,UAAAkB,aAAA,SAAaC,GAEX,IAAGlC,KAAKG,UAA8B,SAAlBH,KAAKG,SAAzB,KAEIgC,EAAKD,EAAME,OAAOD,GAAKE,SAASH,EAAME,OAAOD,IAAME,SAASH,EAAME,OAAOE,cAAcH,IACxFnC,KAAKS,UAA8B,SAAlBT,KAAKS,SACvBT,KAAKiB,OAAWjB,KAAKiB,OAASkB,EAAK,GAAOnC,KAAKiB,OAASkB,GAAM,GAAQA,EAAK,EAAIA,EAAK,GAEpFnC,KAAKiB,OAASkB,EAAK,EAIrBnC,KAAKC,cAAcsC,KAAKvC,KAAKiB,8BA7FhCuB,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,qBACVC,SAnBoB,gkBAqBpBC,UAAW,CACT,CACIC,QAASC,EAAAA,kBACTC,YAAahD,EACbiD,OAAO,YAjBG,0OAgDfC,EAAAA,6BAYAC,EAAAA,yBAGAD,EAAAA,2BAEAA,EAAAA,4BAEAA,EAAAA,0BAEAA,EAAAA,2BAEAA,EAAAA,wBAEAA,EAAAA,wBAEAA,EAAAA,yBAEAA,EAAAA,wBAEAA,EAAAA,SAyBHlD,EA/FA,GCpBA,IAAAoD,EAAA,WAMA,SAAAA,KAQgC,2BAR/BC,EAAAA,SAAQX,KAAA,CAAC,CACRY,aAAc,CAACtD,GACfuD,QAAS,CACPC,EAAAA,YACAC,EAAAA,cAEFC,QAAS,CAAC1D,OAEoBoD,EAdhC","sourcesContent":["import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nconst HTML_TEMPLATE = `\n<div class=\"ionic5-star-rating\">\n  <button [ngStyle]=\"{'width' : fontSize, 'height' : fontSize}\" *ngFor=\"let index of iconsArray\" id=\"{{index}}\" type=\"button\" ion-button icon-only (click)=\"changeRating($event)\">\n    <ion-icon [ngStyle]=\"{'color':index < this.Math.round(this.parseFloat(rating)) ? activeColor : defaultColor, 'font-size' : fontSize }\" name=\"{{(halfStar ==='true' && (rating - index > 0) && (rating - index <= 0.5)) ? halfIcon : (index < this.Math.round(this.parseFloat(rating))) ? activeIcon : defaultIcon}}\"></ion-icon>\n  </button>\n</div>\n`\n\nconst CSS_STYLE = `\n    .ionic5-star-rating button {\n        background: none;\n        box-shadow: none;\n        -webkit-box-shadow: none;\n        padding : 0px;\n    }\n`\n\n@Component({\n  selector: 'ionic5-star-rating',\n  template: HTML_TEMPLATE,\n  styles: [CSS_STYLE],\n  providers: [\n    {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: StarRating,\n        multi: true\n    }\n]\n})\nexport class StarRating implements ControlValueAccessor, OnInit{\n\n  ngOnInit(): void {\n    this.rating = this.rating || 3; //default after input`s initialization\n    for(var i=0; i < this.maxRating; i++) {\n      this.iconsArray.push(i);\n    }\n  }\n\n  private _rating : number;\n  private onChange : any;\n  private onTouched : any;\n  public disabled : boolean;\n\n  writeValue(obj: number): void {\n    this.rating = obj;\n  }\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    this.readonly = isDisabled ? \"true\" : \"false\";\n  }\n\n  @Input() public set rating(val : number){\n    this._rating = val;\n    // for form\n    if(this.onChange){\n      this.onChange(val);\n    }\n  }\n\n  public get rating(): number{\n    return this._rating;\n  }\n  \n  @Output()\n  ratingChanged : EventEmitter<number> = new EventEmitter<number>();\n\n  @Input()\n  readonly: string = \"false\";\n  @Input()\n  activeColor : string = '#488aff';\n  @Input()\n  defaultColor : string = '#aaaaaa';\n  @Input()\n  activeIcon : string = 'star';\n  @Input()\n  defaultIcon : string = 'star-outline';\n  @Input()\n  halfIcon : string = 'star-half';\n  @Input()\n  halfStar : string = \"false\";\n  @Input()\n  maxRating : number = 5;\n  @Input()\n  fontSize : string = '28px';\n  Math: any;\n  parseFloat : any;\n  iconsArray : number[] = [];\n\n  constructor() {\n    this.Math = Math;\n    this.parseFloat = parseFloat;\n  }\n\n  changeRating(event){\n\n    if(this.readonly && this.readonly === \"true\") return;\n    // event is different for firefox and chrome\n    let id = event.target.id ? parseInt(event.target.id) : parseInt(event.target.parentElement.id);\n    if(this.halfStar && this.halfStar === \"true\") {\n      this.rating = ((this.rating - id > 0) && (this.rating - id <= 0.5)) ? id + 1 : id + .5;\n    } else {\n      this.rating = id + 1;\n    }\n    \n    // unique event\n    this.ratingChanged.emit(this.rating)\n  }\n}","import { NgModule } from '@angular/core';\nimport { StarRating } from './ionic5-star-rating.component';\nimport { IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  declarations: [StarRating],\n  imports: [\n    IonicModule,\n    CommonModule\n  ],\n  exports: [StarRating]\n})\nexport class StarRatingModule { }\n"]}